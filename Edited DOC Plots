#Date Started: 11/13/18
#Last Edited: 12/13/18

library(raster)
library(rgdal)
library(sp)
library(RColorBrewer)
library(mapmisc)
library(gdata)
library(ggmap)
library(ggthemes)
library(sp)
library(gridBase)
library(grid)
register_google(key = "AIzaSyDdlZhZQOMGeq3CHP9IoXHvW0Hk6ZXAylM")

#Reading in data
fall <- read.csv("Data/FallDOC.csv", header = T)
summer <- read.csv("Data/SummerDOC.csv", header = T)

#Mainstem only
mainstem.summer <- summer[-grep(c("1A|2A|3A|4A|5A"), summer$Watershed.ID),]
mainstem.fall <- fall[-grep(c("1A|2A|3A|4A|5A"), fall$Watershed.ID),]

#Tributaries only
trib.summer <- summer[grep(c("1A|2A|3A|4A|5A"), summer$Watershed.ID),]
trib.fall <- fall[grep(c("1A|2A|3A|4A|5A"), fall$Watershed.ID),]


# Plot raw data in each watershed -----------------------------------------

#Plot function
plot.raw <- function(w, file, colors, title) {
  for (i in 1:length(w)){
  all <- file[file$Watershed == w[i],]
  all$Watershed.ID <- factor(all$Watershed.ID)
  max <- as.numeric(max(file$DOC..mg.L)+1)
  for (j in 1:3) {
    a <- all[all$Visit == j,]
    dis <- discharge[discharge$V1 == w[i],]
    if (j >= 2) {
      barplot(a$DOC..mg.L., 
              names.arg = a$Watershed.ID, 
              ylim = c(0,max), 
              col = colors[i], 
              axisnames = F,
              axes = F)
      mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 1)
      box(col="gray80")
    }
    else {
      axes <- c(seq(from = 0, to = max, by = 1))
      barplot(a$DOC..mg.L., 
              names.arg = a$Watershed.ID, 
              ylim = c(0,max(file$DOC..mg.L)+1), 
              col = colors[i], 
              axisnames = F,
              cex.axis = 0.8,
              yaxt = 'n')
      axis(side=2, at= axes, 
           lab=axes, las=1)
      mtext(side = 3, outer = F, line = -0.5, w[i], cex = 1.1, adj = 0.02, padj = 1.1)
      mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 1)
      box(col="gray80")
    }
    if (w[i] == "Da") {
      mtext(side = 1, outer = F, line = 0.5, j, cex = 0.7)
      #mtext(side = 1, outer = F, line = 1, expression("Outlet" %->% "Headwaters"), cex = 1)
    }
    }
  }
  par(xpd = T)
  mtext(side = 2, outer = T, line = 2, expression("DOC" ~~ frac(mg, L)), cex = 1)
  mtext(side = 1, outer = T, line = 1.2, "Visit Number", cex = 1)
  title(main = title, outer = T, cex.main = 2)
}

#Plot summer mainstem
library(RColorBrewer)

#Add discharge values
discharge <- matrix(data = c("Aa", 0.019, 0.038,0.076, "Ba", 0.012, 0.036, 0.033, "Ca", 0.119, 0.110, 0.183, "Da",0.043, 0.042, 0.051), nrow = 4, ncol = 4, byrow = T)
discharge <- as.data.frame(discharge)

summercolor <- brewer.pal(4, "Reds")
par(mfrow = c(4,3), oma = c(3,6,3,1), mai = c(0.1,0.1,0.1,0))
plot.raw(w = c("Aa", "Ba", "Ca", "Da"), mainstem.summer, colors = summercolor, title = "Summer Mainstem")

#Plot fall mainstem
fallcolor <- brewer.pal(4, "Blues")
par(mfrow = c(4,3), oma = c(3,6,3,1), mai = c(0.1,0.1,0.1,0))
plot.raw(w = c("Aa", "Ba", "Ca", "Da"), mainstem.fall, colors = fallcolor, title = "Fall Mainstem")

#Plot summer tributaries
par(mfrow = c(3,3), oma = c(3,6,3,1), mai = c(0.1,0.1,0.1,0))
plot.raw(w = c("Aa", "Ba", "Da"), trib.summer, colors = summercolor, title = "Summer Tributaries")

#Plot fall tributaries
par(mfrow = c(3,3), oma = c(3,6,3,1), mai = c(0.1,0.1,0.1,0))
plot.raw(w = c("Aa", "Ba", "Da"), trib.fall, colors = fallcolor, title = "Fall Tributaries")

# Plot Difference Function --------------------------------------------------

plot.difference <- function(w, file1, file2, title) {
  
  cols <- c("#1b9e77","#7570b3", "#e7298a", "#66a61e")
  
  for (i in 1:length(w)){
    all1 <- file1[file1$Watershed == w[i],]
    all1$Watershed.ID <- factor(all1$Watershed.ID)
    
    all2 <- file2[file2$Watershed == w[i],]
    all2$Watershed.ID <- factor(all2$Watershed.ID)
    
    label <- as.character(w[i])
  
    if (i == 2){
    for (j in 1:3) {
      a <- all1[all1$Visit == j,]
      dis <- discharge[discharge$V1 == w[i],]
      if (j >= 2) {
        diff <- a$DOC..mg.L. - all2$Mean.DOC
        barplot(diff, 
                names.arg = NULL, 
                col = cols[i], 
                ylim = c(-1, 8),
                axes = F)
        abline(h = 0, lty = 1)
        points(x = 0.5, y = 7.1, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
        #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
        box(col="gray80")
        }
      else {
        diff <- a$DOC..mg.L. - all2$Mean.DOC
        barplot(diff, 
              names.arg = NULL, 
              col = cols[i], 
              ylim = c(-1, 8),
              ylab = w[i])
        abline(h = 0, lty = 1)
        mtext(side = 3, outer = F, line = -0.5, substr(w[i], start = 1, stop = 1), cex = 0.8, adj = 0.02, padj = 1.1)
        points(x = 0.8, y = 7.1, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
        #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
        box(col="gray80")
      }
    }
    }
    
    if (i == 1) {
      for (j in 1:3) {
        a <- all1[all1$Visit == j,]
        dis <- discharge[discharge$V1 == w[i],]
        if (j >= 2) {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-2, 5),
                  axes = F)
          abline(h = 0, lty = 1)
          points(x = 0.325, y = 4.25, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
        else {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-2, 5),
                  ylab = w[i])
          abline(h = 0, lty = 1)
          mtext(side = 3, outer = F, line = -0.5, substr(w[i], start = 1, stop = 1), cex = 0.8, adj = 0.02, padj = 1.1)
          points(x = 1.1, y = 4.25, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
      }
    }
    
    if (i == 3) {
      for (j in 1:3) {
        a <- all1[all1$Visit == j,]
        dis <- discharge[discharge$V1 == w[i],]
        if (j >= 2) {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-1, 3),
                  axes = F)
          abline(h = 0, lty = 1)
          points(x = 0.2, y = 2.6, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
        else {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-1, 3),
                  ylab = w[i])
          abline(h = 0, lty = 1)
          mtext(side = 3, outer = F, line = -0.5, substr(w[i], start = 1, stop = 1), cex = 0.8, adj = 0.02, padj = 1.1)
          points(x = 0.33, y = 2.6, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
      }
    }
    
    if (i == 4) {
      for (j in 1:3) {
        a <- all1[all1$Visit == j,]
        dis <- discharge[discharge$V1 == w[i],]
        if (j >= 2) {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-1, 3),
                  axes = F)
          abline(h = 0, lty = 1)
          points(x = 0.325, y = 2.55, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
        else {
          diff <- a$DOC..mg.L. - all2$Mean.DOC
          barplot(diff, 
                  names.arg = NULL, 
                  col = cols[i], 
                  ylim = c(-1, 3),
                  ylab = w[i])
          abline(h = 0, lty = 1)
          mtext(side = 3, outer = F, line = -0.5, substr(w[i], start = 1, stop = 1), cex = 0.8, adj = 0.02, padj = 1.1)
          points(x = 1, y = 2.55, col = cols[i], pch = 21, bg = cols[i], cex = as.numeric(paste(dis[1,j+1])) * 3.5)
          #mtext(side = 3, outer = F, dis[1,j+1], line = -0.5, adj = 0.98, padj = 1.1, cex = 0.7)
          box(col="gray80")
        }
      }
    
    }
  }
  par(xpd = T)
  mtext(side = 2, outer = T, line = 2, "DOC mg/L", cex = 1)
  #title(main = title, outer = T, cex.main = 1)
  #par(fig = c(0, 1, 0, 1), oma = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), new = TRUE)
  #plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n")
  #legend(x = "bottom", inset = c(0,0), bty = 'n', legend = c("Fall", "Summer Average"), col = c(colors[8], colors[2]), fill = c(colors[8], colors[2]), cex = 2, horiz = T, x.intersp = 0.6, text.width = c(0.25,0.25,0.25))
}

# Mainstem Overlay --------------------------------------------------------

#Calculate summer average
watersheds <- as.factor(unique(mainstem.fall$Watershed.ID))
means <- data.frame()
for (i in 1:length(watersheds)) {
  a <- mainstem.summer[mainstem.summer$Watershed.ID == as.character(watersheds[i]),]
  mean <- data.frame(unique(a$Watershed), watersheds[i], mean(a$DOC..mg.L.), a$Order[1])
  means <- rbind(means, mean)
}
colnames(means) <- c("Watershed", "Watershed.ID", "Mean.DOC", "Order")

#Add discharge values
discharge <- matrix(data = c("Aa", 0.088, 0.043,0.239, "Ba",0.117, "?", 0.937, "Ca", 0.177, 0.133, 0.135, "Da",0.030, 0.029, 0.276), nrow = 4, ncol = 4, byrow = T)
discharge <- as.data.frame(discharge)

#Plot
col <- brewer.pal(8,"Blues")
dev.size("in")
windows(width = 7, height = 7)
pdf("Plots/MainstemOverlay.pdf", width = 7.031250, height = 5.052083)
par(mfrow = c(4,3), oma = c(1,4,1,1), mai = c(0.1,0.1,0.1,0))
plot.difference(w = c("Aa", "Ba", "Ca", "Da"), file1 = mainstem.fall, file2 = means, title = "Mainstem DOC Difference")
dev.off()
windows(width = 7, height = 5)

# Tributary Overlay -------------------------------------------------------

#Calculate summer average
watersheds <- as.factor(unique(trib.summer$Watershed.ID))
means <- data.frame()
for (i in 1:length(watersheds)) {
  a <- trib.summer[trib.summer$Watershed.ID == as.character(watersheds[i]),]
  mean <- data.frame(unique(a$Watershed), watersheds[i], mean(a$DOC..mg.L.), a$Order[1])
  means <- rbind(means, mean)
}
colnames(means) <- c("Watershed", "Watershed.ID", "Mean.DOC", "Order")

#Add discharge values
discharge <- matrix(data = c("Aa", 0.088, 0.043,0.239, "Ba",0.117, "?", 0.937, "Ca", 0.177, 0.133, 0.135, "Da",0.030, 0.029, 0.276), nrow = 4, ncol = 4, byrow = T)
discharge <- as.data.frame(discharge)

#Plot
col <- brewer.pal(10,"RdBu")
pdf("Plots/TributaryOverlay.pdf", width = 7.031250, height = 5.052083)
par(mfrow = c(3,3), oma = c(4,6,3,1), mai = c(0.1,0.1,0.1,0))
plot.overlay(w = c("Aa", "Ba", "Da"), file1 = trib.fall, means, colors = col, title = "Tributaries")
dev.off()

# Plot Tribs on Map -----------------------------------------------------

#Trib data
map.trib.summer <- summer[summer$Type == "T",]
map.trib.fall <- fall[fall$Type == "T",]
areas <- read.csv("Data/SubwatershedAreas.csv", header = T)
discharge <- read.csv("Data/Discharge.csv", header = T)

#Mapping function
map.tribs <- function(file, w, color, title, d) {
  all <- file[file$Watershed == w,]
  watersheds <- as.factor(unique(all$Watershed.ID))
  area <- areas[areas$Watershed == w, "Area"]
  dis <- d[d$Watershed == w,]
  dis <- dis[order(dis$Discharge),]
  trib.names <- substr(watersheds, start = 1, stop = 4)
  colors <- brewer.pal(length(trib.names), color)
  
  rivers <- readOGR(dsn = "Data/GIS", layer = paste0(w, "Rivers"))
  plot(rivers, col = "blue", lwd = 0.25)
  for (j in 1:length(trib.names)){
    transp.color <- adjustcolor(colors[j], alpha = 0.5)
    sub <- readOGR(dsn = "Data/GIS", layer = trib.names[j])
    plot(sub, add = T, border = colors[j], lwd = 2.5, col = transp.color)
    text(sub, j, halo = T, cex = 1.1, adj = c(0,0.2))
    text(sub, area[j], halo = T, cex = 1.3, pos = 1, hw = 0.2)
  }
  shapefile <- readOGR(dsn = "Data/GIS", layer = w)
  plot(shapefile, add = T)
  
  if (w == "Aa"){
    scaleBar(shapefile, pos = "topleft", cex = 0.8, pt.cex = 1.1, seg.len = 10, outer = T)
  }
  if (w == "Da"){
    scaleBar(shapefile, pos = "bottomright", cex = 0.8, pt.cex = 1.1, seg.len = 10, outer = T)
  }
  if (w == "Ba" | w == "Ca") {
    scaleBar(shapefile, pos = "topright", cex = 0.8, pt.cex = 1.1, seg.len = 5, outer = T)  
  }
  
  for (i in 1:length(watersheds)){
    
      subset <- all[all$Watershed.ID == watersheds[i],]
      subset <- subset[match(dis$Visit, subset$Visit..),]
      barplot(subset$DOC..mg.L.,
              names.arg = NULL, 
              col = colors[i], 
              ylim = c(0, max(all$DOC..mg.L.) + 1),
              axes = T)
      points(x = 0.325, y = 5, col = colors[i], pch = 22, bg = colors[i], cex = area[i]/50)
      mtext(side = 3, outer = F, line = -0.5, 
            substr(watersheds[i], start = 4, stop = 4), 
            cex = 0.6, adj = 0.15, padj = 0.95)
      displot <- data.frame(c(0.7,1.9,3.12), c(-0.6,-0.6,-0.6))
      par(xpd = T)
      points(x = displot[,1], y = displot[,2], cex = dis$Discharge * 15, pch = 21, col = "#fdae61", bg = "#fdae61")
  }
  par(xpd = T)
  mtext(side = 2, outer = T, line = 2, "DOC mg/L", adj = 0.5, cex = 0.8)
  mtext(side = 3, outer = T, line = 3, expression("Outlet Discharge" ~~ (m^3/"s")), cex = 0.8) 
  #title(main = title, outer = T, cex.main = 2) 
  par(fig = c(0, 1, 0, 1), oma = c(1, 0, 0, 0), mar = c(0, 2.5, 0, 0), new = TRUE) 
  plot(0, 0, type = "n", bty = "n", xaxt = "n", yaxt = "n") 
  legend(x = "top", inset = c(-0.05,0.03),  
         bty = 'n', legend = c(dis$Discharge[1], dis$Discharge[2], dis$Discharge[3]),  
         col = "#fdae61", pt.bg = "#fdae61", cex = 1.5, horiz = T, pt.cex = c(dis$Discharge[1]*15, dis$Discharge[2]*15, dis$Discharge[3]*15),  
         pch = 22, x.intersp = 1) 
}

#Making maps
windows(width = 8, height = 6)
pdf('Plots/AFallTrib.pdf', width = 7.031250, height = 5.052083)
mat <- matrix(c(2,2,1,1,1,1,5,5,
                3,3,1,1,1,1,7,7,
                0,0,4,4,6,6,0,0), nrow = 3, ncol = 8, byrow = T)
layout(mat=mat)
par(oma = c(1,4,5,1), mai = c(0.3,0.2,0.1,0.1))
map.tribs(file = map.trib.fall, w = "Aa", color = "Blues", title = "Watershed A Fall Tributary DOC Concentrations", d = discharge[discharge$Season == "F",])
dev.off()

pdf('Plots/ASummerTrib.pdf', width = 8, height = 6)
mat <- matrix(c(2,2,1,1,1,1,5,5,
                3,3,1,1,1,1,7,7,
                0,0,4,4,6,6,0,0), nrow = 3, ncol = 8, byrow = T)
layout(mat=mat)
par(oma = c(5,4,3,1), mai = c(0.2,0.2,0,0.1))
map.tribs(map.trib.summer, "Aa", "Reds", "Watershed A Summer Tributary DOC Concentrations", d = discharge[discharge$Season == "S",])
dev.off()

pdf('Plots/BFallTrib.pdf', width = 7.031250, height = 5.052083)
mat <- matrix(c(2,1,1,1,
                3,1,1,1,
                4,5,6,7),
              nrow = 3, ncol =  4, byrow = T)
layout(mat=mat)
par(oma = c(5,4,3,1), mai = c(0.2,0.2,0,0.1))
map.tribs(map.trib.fall, "Ba", "Blues", "Watershed B Fall Tributary DOC Concentrations", d = discharge[discharge$Season == "F",])
dev.off()

pdf('Plots/BSummerTrib.pdf', width = 7.031250, height = 5.052083)
mat <- matrix(c(2,1,1,1,
                3,1,1,1,
                4,5,6,7),
              nrow = 3, ncol =  4, byrow = T)
layout(mat=mat)
par(oma = c(5,4,3,1), mai = c(0.2,0.2,0,0.1))
map.tribs(map.trib.summer, "Ba", "Reds", "Watershed B Summer Tributary DOC Concentrations", d = discharge[discharge$Season == "S",])
dev.off()

pdf('Plots/DFallTrib.pdf', width = 7.031250, height = 5.052083)
mat <- matrix(c(2,1,1,
                3,1,1,
                4,5,6),
              nrow = 3, ncol =  3, byrow = T)
layout(mat=mat)
par(oma = c(5,4,3,1), mai = c(0.3,0.2,0,0.1))
map.tribs(map.trib.fall, "Da", "Blues", "Watershed D Fall Tributary DOC Concentrations", d = discharge[discharge$Season == "F",])
dev.off()

pdf('Plots/DSummerTrib.pdf', width = 7.031250, height = 5.052083)

#mat <- matrix(c(2,1,1,
#                3,1,1,
#                4,5,6),
#              nrow = 3, ncol =  3, byrow = T)
layout(mat=mat)
par(oma = c(5,4,3,1), mai = c(0.3,0.2,0,0.1))
map.tribs(map.trib.summer, "Da", "Reds", "Watershed D Summer Tributary DOC Concentrations", d = discharge[discharge$Season == "S",])
dev.off()

# Map Outlet Export --------------------------------------------------------------

#Select and label DOC values for outlets only during both seasons
f <- fall[grep("00", fall$Watershed.ID),]
f$Season <- "F"
s <- summer[grep("00", summer$Watershed.ID),]
s$Season <- "S"

#Import discharge data
discharge <- read.csv("Data/Discharge.csv", header = T)

#Calculate export
all <- rbind(f, s)
export <- data.frame()
    for (j in 1:nrow(all)){
      doc <- all[j,]
      dis <- discharge[discharge$Watershed == doc$Watershed, ]
      dis <- dis[dis$Season == doc$Season,]
      dis <- dis[dis$Visit == doc$Visit,]
      exp <- doc$DOC..mg.L.*dis$Discharge
      export[j,1] <- as.character(doc$Watershed)
      export[j,2] <- as.character(doc$Date.Collected)
      export[j,3] <- doc$Visit..
      export[j,4] <- doc$Season
      export[j,5] <- exp
    }

colnames(export) <- c("Watershed", "Date.Collected", "Visit", "Season", "Export")

map.outlet.discharge <- function(w) {
  
  #Set colors
  s.transp <- adjustcolor("#e6ab02", alpha = 0.7)
  f.transp <- adjustcolor("#d95f02", alpha = 0.7)
  a.col <- "#1b9e77"
  b.col <- "#7570b3"
  c.col <- "#e7298a"
  d.col <- "#66a61e"
  cols <- c(a.col,b.col, c.col, d.col)
  
  #Plot the maps
  #for (i in 1:length(w)){
  #shapefile <- readOGR(dsn = "Data/GIS", layer = w[i])
  #plot(shapefile)
  #mtext(side = 1, outer = F, line = -0.5, paste0(substr(w[i], start = 1, stop = 1), ": ", area[i]), cex = 0.8, adj = 0.05, padj = 1)
  #}
  
  #Plot the plots
  
  for (j in 1:length(w)){
    dis <- discharge[discharge$Watershed == w[j],]
    dis <- dis[order(dis$Season, decreasing = T),]
    data <- export[export$Watershed == w[j],]
    data <- data[order(data$Season, decreasing = T),]
    f <- data
    #d <- data.frame(data, dis)
    #ggplot(d) + aes(Discharge, Export) + geom_point(aes(col = Season), alpha = 0.8, cex = 5)+ theme_example()
    plot(x = dis[dis$Season == "F", "Discharge"], y = f[f$Season == "F", "Export"],
        ylim = c(0, max(data$Export)+0.1),
        xlim = c(min(dis$Discharge), max(dis$Discharge)),
        col = f.transp, pch = 20, cex = 3,
        xlab = NA, ylab = NA)
    points(x = dis[dis$Season == "S", "Discharge"], y = f[f$Season == "S", "Export"],
           col = s.transp,
           pch = 20,
           cex = 3)
    mtext(side = 3, outer = F, line = -0.5, 
          substr(w[j], start = 1, stop = 1), cex = 1.2, adj = 0.02, padj = 1, col = cols[j])
    #abline(lm(f$Export~dis$Discharge), lty = 3, xpd = F)
  
  }
  
  #Plot the large map with the bounding box
  wa <- c(left = -125, bottom = 46, right = -122, top = 49)
  map <- get_map(wa, zoom = calc_zoom(wa), maptype = "satellite")
  ggmap(map)
  coords <- matrix(c(-124, 47.6,
                     -124, 47.8,
                     -124.4, 47.8,
                     -124.4,47.6,
                     -124,47.6), ncol =2, byrow = T)
  p <- Polygon(coords)
  p <- SpatialPolygons(list(Polygons(list(p), ID = "a")), proj4string = CRS("+proj=longlat +datum=WGS84"))
  vps <- viewport(height = 0.85, width = 0.85, just = c(0.75,0.5))                  
  x <- ggmap(map, extent = "panel") + geom_polygon( aes(x = long, y = lat),size = 0.8, data = p, fill = "NA", color = "black")+
    scale_x_continuous(limit = c(-125, -123))+  theme_map()
  print(x, vp = vps)
  
  #Plot the watersheds
  wa <- c(left = -124.4, bottom = 47.5, right = -124, top = 48)
  map <- get_map(wa, zoom = calc_zoom(wa),maptype = "satellite")
  a <- readOGR(dsn = "Data/GIS", layer = "Aa")
  a <- spTransform(a, CRS("+proj=longlat +datum=WGS84"))
  acentroid <- getSpPPolygonsLabptSlots(a)
  a <- fortify(a)
  b <- readOGR(dsn = "Data/GIS", layer = "Ba")
  b <- spTransform(b, CRS("+proj=longlat +datum=WGS84"))
  bcentroid <- getSpPPolygonsLabptSlots(b)
  b <- fortify(b)
  c <- readOGR(dsn = "Data/GIS", layer = "Ca")
  c <- spTransform(c, CRS("+proj=longlat +datum=WGS84"))
  ccentroid <- getSpPPolygonsLabptSlots(c)
  c <- fortify(c)
  d <- readOGR(dsn = "Data/GIS", layer = "Da")
  d <- spTransform(d, CRS("+proj=longlat +datum=WGS84"))
  dcentroid <- getSpPPolygonsLabptSlots(d)
  d <- fortify(d)
  
  vps2 <- viewport(height = 0.543, width = 0.543, just = c(0.89,1)) 
  y <- ggmap(map, extent = "panel")+ geom_polygon(aes(x = long, y = lat), alpha = 0.5,data = a, color = "black", fill = a.col) +
    geom_polygon(aes(x = long, y = lat), alpha = 0.5, color = "black",fill = b.col, data = b) + 
    geom_polygon(aes(x = long, y = lat), alpha = 0.5, color = "black",fill = c.col, data = c) + 
    geom_polygon(aes(x = long, y = lat), alpha = 0.5, color = "black",fill = d.col, data = d) + 
    geom_text(aes(x = acentroid[1], y = acentroid[2], label = "A"))+
    geom_text(aes(x = bcentroid[1], y = bcentroid[2], label = "B"))+
    geom_text(aes(x = ccentroid[1], y = ccentroid[2], label = "C"))+
    geom_text(aes(x = dcentroid[1], y = dcentroid[2], label = "D"))+
    scale_y_continuous(limits=c(47.6, 47.8)) + theme_map()
  print(y, vp = vps2)
  
  mtext(side = 1, outer = T, line = 1.5, expression("Outlet Discharge" ~~ (m^3/"s")), cex = 0.8, adj = 0.9)
  par(xpd = T)
  mtext(side = 2, outer = T, line = 2, expression("DOC Export mg s" ~~ m^-3 ~~ L^-1), cex = 0.8, adj = 0.5, padj = 26)
  title(main = expression("Summer" * phantom(" and Fall DOC Export)")), col.main = "#e6ab02", outer = T, cex.main = 1.5, line = -0.5)
  title(main = expression(phantom("Summer ") * "and" * phantom(" Fall DOC Export")), col.main = "black", outer = T, cex.main = 1.5, line = -0.5)
  title(main = expression(phantom("Summer and") * " Fall" * phantom(" DOC Export")), col.main = "#d95f02", outer = T, cex.main = 1.5, line = -0.5)
  title(main = expression(phantom("Summer and Fall") * " DOC Export"), col.main = "black", outer = T, cex.main = 1.5, line = -0.5)
}

a <- c(874, 1507, 1495, 561)
windows(width = 8, height = 8)
pdf("Plots/DOCExportPlots.pdf", width = 8, height = 8)
mat <- matrix(c(0,0,1,1,
                0,0,2,2,
                0,0,3,3,
                0,0,4,4), ncol = 4, nrow = 4, byrow = T)
layout(mat = mat)
par(oma = c(3,5,1,1), mar = c(0.5,0.5,0.2,0.5), mai = c(0.2,0.8,0.3,0.1))
map.outlet.discharge(w = c("Aa", "Ba", "Ca", "Da"))
dev.off()